<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>life.genny</groupId>
	<artifactId>kogitoq</artifactId>
	<version>10.1.0</version>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<name>KogitoQ</name>
	<description>Genny Project RulesEngine</description>

	<url>https://www.gada.io</url>
	<inceptionYear>2022</inceptionYear>
	<organization>
		<name>GADA Technology</name>
		<url>http://www.gada.io/</url>
	</organization>

	<scm>
		<connection>scm:git:https://github.com/genny-project/kogitoq.git</connection>
		<developerConnection>scm:git:git@github.com:genny-project/kogitoq.git</developerConnection>
		<url>https://github.com/genny-project/kogitoq</url>
	</scm>

	<developers>
		<developer>
			<name>All developers are listed in the GADA Technology site</name>
			<url>https://github.com/genny-project/developers</url>
		</developer>
	</developers>

	<properties>
		<genny.version>${project.version}</genny.version>
		<kogito.version>1.14.1.Final</kogito.version>
		<compiler-plugin.version>3.8.1</compiler-plugin.version>
		<maven.compiler.release>11</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus-plugin.version>2.5.4.Final</quarkus-plugin.version>
		<quarkus.platform.version>2.5.4.Final</quarkus.platform.version>
		<quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
		<surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
		<testcontainers.version>1.16.2</testcontainers.version>
		<surefire.forkCount>1</surefire.forkCount>
		<failsafe.include>**/*IT.java</failsafe.include>
		<failsafe.exclude>**/Native*IT.java</failsafe.exclude>
		<alphanetworkCompilerEnabled>false</alphanetworkCompilerEnabled>
		<version.org.optaplanner>8.14.0.Final</version.org.optaplanner>
		<!-- override default to fast-jar packaging for forward-compatibility -->
		<quarkus.package.type>fast-jar</quarkus.package.type>
		<!-- dependencies version -->
		<version.org.skyscreamer>1.5.0</version.org.skyscreamer>
		<!-- JKube -->
		<version.org.eclipse.jkube>1.4.0</version.org.eclipse.jkube>
		<version.docker.plugin>0.37.0</version.docker.plugin>
	</properties>
				
				<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>${quarkus.platform.group-id}</groupId>
						<artifactId>${quarkus.platform.artifact-id}</artifactId>
						<version>${quarkus.platform.version}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
				</dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>life.genny</groupId>
						<artifactId>qwandaq</artifactId>
						<version>${genny.version}</version>
						<exclusions>
							<exclusion>
								<artifactId>xml-apis</artifactId>
								<groupId>xml-apis</groupId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>com.google.protobuf</groupId>
						<artifactId>patched-protobuf-java</artifactId>
						<version>1.0</version>
						<scope>system</scope>
						<systemPath>${project.basedir}/patchs/map-field-patch.jar</systemPath>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-arc</artifactId>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-legacy-api</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-resteasy</artifactId>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-container-image-docker</artifactId>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-junit5</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.rest-assured</groupId>
						<artifactId>rest-assured</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-quarkus</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-resteasy-jackson</artifactId>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-persistence-infinispan</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
						<version>2.5.4.Final</version>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-smallrye-openapi</artifactId>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-smallrye-health</artifactId>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-events-process</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-process-management</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-jobs-management</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-process-svg</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-messaging</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-quarkus-rules</artifactId>
							<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-quarkus-decisions</artifactId>
							<version>${kogito.version}</version>
					</dependency>

					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>drools-decisiontables</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-addons-quarkus-monitoring-prometheus</artifactId>
						<version>${kogito.version}</version>
					</dependency>
					<dependency>
      					<groupId>org.kie.kogito</groupId>
      					<artifactId>kogito-test-utils</artifactId>
      						<version>${kogito.version}</version>
      					<scope>test</scope>
    					</dependency>
 					<dependency>
						<groupId>org.kie.kogito</groupId>
						<artifactId>kogito-quarkus-test-utils</artifactId>
						<version>${kogito.version}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.testcontainers</groupId>
						<artifactId>junit-jupiter</artifactId>
						<version>${testcontainers.version}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-qute</artifactId>
					</dependency>
				</dependencies>
				<build>
					<plugins>
						<plugin>
							<groupId>${quarkus.platform.group-id}</groupId>
							<artifactId>quarkus-maven-plugin</artifactId>
							<version>${quarkus.platform.version}</version>
							<extensions>true</extensions>
							<executions>
								<execution>
									<goals>
										<goal>build</goal>
										<goal>generate-code</goal>
										<goal>generate-code-tests</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${compiler-plugin.version}</version>
							<configuration>
								<compilerArgs>
									<arg>-parameters</arg>
								</compilerArgs>
							</configuration>
						</plugin>
						<plugin>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${surefire-plugin.version}</version>
							<configuration>
								<systemPropertyVariables>
									<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
									<maven.home>${maven.home}</maven.home>
								</systemPropertyVariables>
							</configuration>
						</plugin>
						<plugin>
							<groupId>pl.project13.maven</groupId>
							<artifactId>git-commit-id-plugin</artifactId>
							<version>2.2.3</version>
							<executions>
								<execution>
									<id>git-info</id>
									<goals>
										<goal>revision</goal>
									</goals>
									<configuration>
										<generateGitPropertiesFile>true</generateGitPropertiesFile>
										<generateGitPropertiesFilename>target/classes/${project.name}-git.properties</generateGitPropertiesFilename>
										<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
										<prefix>git</prefix>
										<dateFormat>yyyy.MM.dd '@' HH:mm:ss z</dateFormat>
										<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
										<verbose>false</verbose>
										<generateGitPropertiesFile>true</generateGitPropertiesFile>
										<generateGitPropertiesFilename>src/main/resources/${project.name}-git.properties</generateGitPropertiesFilename>
										<format>properties</format>
										<skipPoms>true</skipPoms>
										<injectAllReactorProjects>false</injectAllReactorProjects>
										<failOnNoGitDirectory>true</failOnNoGitDirectory>
										<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
										<skip>false</skip>
										<runOnlyOnce>false</runOnlyOnce>
										<excludeProperties></excludeProperties>
										<includeOnlyProperties></includeOnlyProperties>
										<useNativeGit>false</useNativeGit>
										<abbrevLength>7</abbrevLength>
										<gitDescribe>
											<skip>false</skip>
											<always>false</always>
											<abbrev>7</abbrev>
											<dirty>-dirty</dirty>
											<match>*</match>
											<forceLongFormat>false</forceLongFormat>
										</gitDescribe>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</build>
				<profiles>
					<profile>
						<id>native</id>
						<activation>
							<property>
								<name>native</name>
							</property>
						</activation>
						<build>
							<plugins>
								<plugin>
									<groupId>pl.project13.maven</groupId>
									<artifactId>git-commit-id-plugin</artifactId>
									<version>2.2.3</version>
									<executions>
										<execution>
											<id>git-info</id>
											<goals>
												<goal>revision</goal>
											</goals>
											<configuration>
												<generateGitPropertiesFile>true</generateGitPropertiesFile>
												<generateGitPropertiesFilename>target/classes/${project.name}-git.properties</generateGitPropertiesFilename>
												<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
												<prefix>git</prefix>
												<dateFormat>yyyy.MM.dd '@' HH:mm:ss z</dateFormat>
												<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
												<verbose>false</verbose>
												<generateGitPropertiesFile>true</generateGitPropertiesFile>
												<generateGitPropertiesFilename>src/main/resources/${project.name}-git.properties</generateGitPropertiesFilename>
												<format>properties</format>
												<skipPoms>true</skipPoms>
												<injectAllReactorProjects>false</injectAllReactorProjects>
												<failOnNoGitDirectory>true</failOnNoGitDirectory>
												<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
												<skip>false</skip>
												<runOnlyOnce>false</runOnlyOnce>
												<excludeProperties></excludeProperties>
												<includeOnlyProperties></includeOnlyProperties>
												<useNativeGit>false</useNativeGit>
												<abbrevLength>7</abbrevLength>
												<gitDescribe>
													<skip>false</skip>
													<always>false</always>
													<abbrev>7</abbrev>
													<dirty>-dirty</dirty>
													<match>*</match>
													<forceLongFormat>false</forceLongFormat>
												</gitDescribe>
											</configuration>
										</execution>
									</executions>
								</plugin>
								<plugin>
									<artifactId>maven-failsafe-plugin</artifactId>
									<version>${surefire-plugin.version}</version>
									<executions>
										<execution>
											<goals>
												<goal>integration-test</goal>
												<goal>verify</goal>
											</goals>
											<configuration>
												<systemPropertyVariables>
													<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
													<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
													<maven.home>${maven.home}</maven.home>
												</systemPropertyVariables>
											</configuration>
										</execution>
									</executions>
								</plugin>
							</plugins>
						</build>
						<properties>
							<quarkus.package.type>native</quarkus.package.type>
						</properties>
					</profile>
				</profiles>
</project>
